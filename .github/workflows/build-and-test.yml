# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Test

on:
  push:
    branches-ignore:
      - master

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  lint-typecheck:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn
      - run: yarn workspace gaia prisma generate
      - run: yarn lint-typecheck

  build-vor-frontend:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn workspaces focus --production vor
      - name: Gatsby build
        run: yarn build --filter=vor
      - uses: actions/upload-artifact@v3
        with:
          name: vor
          path: apps/vor/frontend/public

  build-gaia:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn workspaces focus --production gaia
      - run: yarn workspace gaia prisma generate
      - run: yarn build --filter=gaia
        env:
          SENTRY_ORG: obserfy
          SENTRY_PROJECT: gaia
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - uses: actions/upload-artifact@v3
        with:
          name: gaia
          path: apps/gaia/.next

  test-vor-backend:
    runs-on: ubuntu-latest

    services:
      minio:
        image: chrsep/minio:latest
        env:
          MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
          MINIO_SECRET_KEY: wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY
          MINIO_HTTP_TRACE: "/dev/stdout"
        ports:
          - 9000:9000
      postgres:
        image: obserfy/postgres-dev:latest
        env:
          POSTGRES_MULTIPLE_DATABASES: defaultdb,defaultdb_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY
      MINIO_ENDPOINT: localhost:9000
      MINIO_BUCKET_NAME: media
      MINIO_BUCKET_LOCATION: us-east-1
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432

    steps:
      - uses: actions/checkout@v2
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v2
        env:
          cache-name: cache-vor-backend-deps
        with:
          path: |
            apps/vor/vendor
          key: v2-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.mod') }}
      - name: Use Go 15
        uses: actions/setup-go@v3
        with:
          go-version: 1.15.3
      - run: cd apps/vor/ && go get gotest.tools/gotestsum
      - run: cd apps/vor/ && go mod vendor
      - run: |
          cd apps/vor/
          mkdir test_result
          mkdir test_result/go
          PACKAGE_NAMES=$(go list ./...)
          gotestsum --junitfile test_result/go/gotestsum-report.xml -- $PACKAGE_NAMES -v -coverprofile=coverage.txt -covermode=atomic -coverpkg $(go list ./... | grep -v "test" | paste -s -d",")

  # TODO: Gatsby v4 killed our snapshot test. debug later.
  #  vor-snapshot-test:
  #    runs-on: ubuntu-latest
  #
  #    needs:
  #      - build-vor-frontend
  #
  #    steps:
  #      - uses: actions/checkout@v2
  #      - name: Cache deps
  #        id: cache-deps
  #        uses: actions/cache@v2
  #        env:
  #          cache-name: cache-vor-snapshot-test
  #        with:
  #          path: |
  #            .yarn
  #          key: v6-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
  #      - name: Use Node.js 15
  #        uses: actions/setup-node@v2
  #        with:
  #          node-version: 15
  #      - name: Install Dependencies
  #        run: yarn install
  #      - uses: actions/download-artifact@v2
  #        with:
  #          name: vor
  #          path: apps/vor/frontend/public
  #      - run: yarn workspace vor run test

  e2e-parallel:
    if: ${{ !contains(github.ref, 'renovate') &&  github.ref != 'refs/heads/develop' &&  github.ref != 'refs/heads/feat/i10n' }}
    needs:
      - build-gaia
      - build-vor-frontend
    runs-on: ubuntu-latest
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      CYPRESS_VOR_HOST: https://localhost:8000
      CYPRESS_GAIA_HOST: http://localhost:3000
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [ 1, 2, 3, 4 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: vor
          path: apps/vor/frontend/public
      - uses: actions/download-artifact@v2
        with:
          name: gaia
          path: apps/gaia/.next
      - run: touch .env.local # stop docker-compose from complaining about missing file.
      - run: docker-compose up -d minio db vor_app nginx &
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn workspaces focus e2e
      - name: Cypress parallel run
        uses: cypress-io/github-action@v4
        with:
          command: yarn workspace e2e run cy:run --record --parallel --config baseUrl=https://localhost:8000
          group: 'E2E'
          wait-on: 'https://localhost:8000/login'
          wait-on-timeout: 240
          install: false
          working-directory: ./apps/e2e
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # secret envs
      #          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      #          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      #          CYPRESS_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      #          CYPRESS_GAIA_USERNAME: ${{ secrets.CYPRESS_GAIA_USERNAME }}
      #          CYPRESS_GAIA_PASSWORD: ${{ secrets.CYPRESS_GAIA_PASSWORD }}
      #          CYPRESS_VOR_HOST: 'https://localhost:8000'
      #          CYPRESS_GAIA_HOST: 'http://localhost:3000'

  # runs on renovate build to conserve cypress quota.
  e2e-sequential:
    if: ${{ contains(github.ref, 'renovate') || github.ref == 'refs/heads/develop'  || github.ref == 'refs/heads/feat/i10n'}}
    needs:
      - build-gaia
      - build-vor-frontend
    runs-on: ubuntu-latest
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      CYPRESS_VOR_HOST: https://localhost:8000
      CYPRESS_GAIA_HOST: http://localhost:3000
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: vor
          path: apps/vor/frontend/public
      - uses: actions/download-artifact@v2
        with:
          name: gaia
          path: apps/gaia/.next
      - run: touch .env.local # stop docker-compose from complaining about missing file.
      - run: docker-compose up -d minio db vor_app nginx &
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn workspaces focus e2e
      - name: Cypress sequential run
        uses: cypress-io/github-action@v4
        with:
          command: yarn workspace e2e run cy:run --config baseUrl=https://localhost:8000
          group: 'E2E'
          wait-on: 'https://localhost:8000/login'
          wait-on-timeout: 240
          install: false
          working-directory: ./apps/vor/frontend
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # secret envs
      #          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      #          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      #          CYPRESS_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      #          CYPRESS_GAIA_USERNAME: ${{ secrets.CYPRESS_GAIA_USERNAME }}
      #          CYPRESS_GAIA_PASSWORD: ${{ secrets.CYPRESS_GAIA_PASSWORD }}
      #          CYPRESS_VOR_HOST: 'https://localhost:8000'
      #          CYPRESS_GAIA_HOST: 'http://localhost:3000'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-videos
          path: apps/vor/frontend/cypress/videos
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-screenshots
          path: apps/vor/frontend/cypress/screenshots
